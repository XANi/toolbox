[package]
authors = ["Mariusz Gronczewski <xani666@gmail.com>"]
edition = "2018"
readme = "README.md"
name = "rust-arm"
version = "0.1.0"

# cortex-m specific
[dependencies]
cortex-m = "^0.7.3"     # Low-level access to generic cortex-m processors 
cortex-m-rt = "^0.6.14" # Minimal runtime
embedded-hal = "^0.2.5" # Generic embedded HAL (Hardware Abstraction Layer) 
panic-halt = "^0.2.0"   # Panic handler
nb = "0.1.2"

# device-specific
[dependencies.stm32f1xx-hal]
# STM32 devices are divided on low, medium and high (memory/flash) density devices. STM32F103 used in Blue Pill is medium
features = ["stm32f103", "rt", "medium"]
version = "^0.7.0"


# Uncomment for the panic example.
# panic-itm = "0.4.1"

# Uncomment for the allocator example.
# alloc-cortex-m = "0.4.0"

# Uncomment for the device example.
# Update `memory.x`, set target to `thumbv7em-none-eabihf` in `.cargo/config`,
# and then use `cargo build --examples device` to build it.
# [dependencies.stm32f3]
# features = ["stm32f303", "rt"]
# version = "0.7.1"

# this lets you use `cargo fix`!
[[bin]]
name = "rust-arm"
test = false
bench = false

[profile.release]
codegen-units = 1 # better optimizations
debug = true # symbols are nice and they don't increase the size on Flash
lto = true # better optimizations
